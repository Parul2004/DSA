a) Duplicate Elements In Array

1. create a Set
2. Sort it 
3. then put its elements in vector and return it

set<int>s1;
sort(arr,arr+n);
int f = 0;
for(int i = 0;i<n;i++){
    if(arr[i] == arr[i+1]){
        s1.insert(arr[i]);
        f = 1;
    }
}

vector<int>v;
if(f==0){
    v.push_back(-1);
}
else{

    for(auto i:s1){
        v.push_back(i);
    }
}


return v;

b) Product Except Itself
// GFG Solution

create left,right and Answer vector

nums = {2,3,4,5};

vector<long long int>left(n);
vector<long long int>left(n);

left[0] = 1, right[n-1] = 1;

for(int i = 1;i<n;i++){
        left[i] = left[i-1]*nums[i-1];
}

for(int j = n-2;j>=0;j--){
    right[i] = right[i+1]*nums[i+1];
}

for(int i = 0;i<n;i++){
    Answer[i] = left[i]*right[i];
}

for(int i = 0;i<n;i++){
    cout<<Answer[i]<<" ";
}

// Leetcode Solution By "Me"

vector<int>left(n);
vector<int>right(n);

int l = 1,r = 1;
for(int i = 0;i<n;i++){
    l*=nums[i];
    left[i] = l;
}

for(int i = n-1;i>=0;i--){
    r*=nums[i];
    right[i] = r;
}

for(int i = 0;i<n;i++){
    if(i==0){
        Answer[i] = right[i+1];
    }
    else if(i==n-1){
        Answer[i] = left[i-1];
    }
    else{
        Answer[i] = left[i-1]*right[i+1];
    }

}

for(int i = 0;i<n;i++){
    cout<<Answer[i]<<" ";
}




